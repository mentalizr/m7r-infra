server {
    server_name localhost;

    listen 443 ssl;

    ssl_certificate /etc/nginx/certs/domain.crt;
    ssl_certificate_key /etc/nginx/certs/private.key;

#    location / {
#        root  /usr/share/nginx/html;
#        index index.html index.htm;
#    }

#    location / {
#        proxy_pass http://tomcat:8080;
#        proxy_set_header Host $host;
#
#        proxy_redirect http:// https://;
#    }

#   Leitet bei leerer Base-URL auf Login-Steite um, aber Achtung:
#   * Zielpfad darf nicht mit / beginnen, sonst wird die gesamte URL neu
#   geschrieben und da nginx vom (Docker-internen) Port 443 ausgeht,
#   verschwindet die Port-Nummber, wenn diese extern nicht 443 ist
#   * return code sollte 302 (moved temporarily) und nicht 301 (moved
#   permanenty) sein, sonst wird diese URL im Browser-Cache gehalten
#   * "= /" bedeutet "exakt /"

    location = / {
        return 302 m7r/app;
    }

#   Ein location-Block f√ºr jeden verwendeten Kontext hat zur Folge,
#   dass alle anderen Kontexte/Webapps z.B. manager oder example
#   von aussen nicht sichtbar sind.

    location /m7r/ {
        proxy_pass http://tomcat:8080/m7r/;
        proxy_set_header Host $host;
        proxy_redirect http:// https://;
    }

    location /resrc/ {
        proxy_pass http://tomcat:8080/resrc/;
        proxy_set_header Host $host;
        proxy_redirect http:// https://;
    }

    location /vendor/ {
        proxy_pass http://tomcat:8080/vendor/;
        proxy_set_header Host $host;
        proxy_redirect http:// https://;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}
